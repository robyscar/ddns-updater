// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/qdm12/ddns-updater/internal/update (interfaces: DebugLogger)

// Package mock_update is a generated GoMock package.
package mock_update

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockDebugLogger is a mock of DebugLogger interface.
type MockDebugLogger struct {
	ctrl     *gomock.Controller
	recorder *MockDebugLoggerMockRecorder
}

// MockDebugLoggerMockRecorder is the mock recorder for MockDebugLogger.
type MockDebugLoggerMockRecorder struct {
	mock *MockDebugLogger
}

// NewMockDebugLogger creates a new mock instance.
func NewMockDebugLogger(ctrl *gomock.Controller) *MockDebugLogger {
	mock := &MockDebugLogger{ctrl: ctrl}
	mock.recorder = &MockDebugLoggerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDebugLogger) EXPECT() *MockDebugLoggerMockRecorder {
	return m.recorder
}

// Debug mocks base method.
func (m *MockDebugLogger) Debug(arg0 string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Debug", arg0)
}

// Debug indicates an expected call of Debug.
func (mr *MockDebugLoggerMockRecorder) Debug(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Debug", reflect.TypeOf((*MockDebugLogger)(nil).Debug), arg0)
}
